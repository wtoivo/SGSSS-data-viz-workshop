[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"addition benefiting reproducibility transparency, one advantages using R researchers much larger range fully customisable data visualisations options. options look attractive, can increase transparency distribution underlying data rather relying commonly used visualisations aggregations bar charts means.tutorial, provide practical introduction data visualisation using R, specifically aimed researchers little prior experience using R. First provide brief overview general data visualisation principles ggplot2 package data visualisation. tutorial walks four different types plots: bar charts, scatterplots, violin-boxplots lineplots time series data.","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"Welcome SGSSS Summer School workshop data visualisation! today's session, going cover:basic principles data visualisation;basic principles data visualisation;brief overview setting getting started RStudio;brief overview setting getting started RStudio;structure ggplot2 data visualisation package different customisation options;structure ggplot2 data visualisation package different customisation options;Four different types plots four different types data social science researchers likely encounter (bar plots count data, scatterplots correlational data, violin-boxplots distributions, line plots time series data).Four different types plots four different types data social science researchers likely encounter (bar plots count data, scatterplots correlational data, violin-boxplots distributions, line plots time series data).workshop based PsyTeachR materials changes additions specific workshop. materials adapted :Nordmann, E. & DeBruine, L. (2022). Applied Data Skills (1.0). Zenodo. https://doi.org/10.5281/zenodo.6365078Nordmann, E., McAleer, P., Toivo, W., Paterson, H. & DeBruine, L. (accepted). Data visualisation using R, researchers use R. Advances Methods Practices Psychological Science.comprehensive version tutorial can found : https://psyteachr.github.io/introdataviz/index.html","code":""},{"path":"introduction.html","id":"data-visualisation-principles-james","chapter":"1 Introduction","heading":"1.1 Data visualisation principles (JAMES)","text":"","code":""},{"path":"introduction.html","id":"why-use-r-for-data-visualisation","chapter":"1 Introduction","heading":"1.2 Why use R for data visualisation?","text":"Creating data visualisations writing code (opposed using point--click software) increases reproducibility work. write code produce plots, can reuse adapt code future. Finally, using R create data visualisations gives control basically every element plot.hope workshop inspire start experimenting R! today's session simply focusing visualisation really touch data wrangling (time-consuming part data analysis). data encounter wild messier see today - perfectly acceptable start cleaning data software feel comfortable simply reading clean data R visualisation. However, recommend eventually moving onto parts analysis R reproducibility benefits outlined . want dip toes data wrangling, PsyTeachR team wealth materials different levels expertise freely available online: https://psyteachr.github.io/","code":""},{"path":"introduction.html","id":"a-very-short-introduction-to-r","chapter":"1 Introduction","heading":"1.3 A very short introduction to R","text":"","code":""},{"path":"introduction.html","id":"installing-r","chapter":"1 Introduction","heading":"1.3.1 Installing R","text":"R RStudio installed, please follow instructions : https://emilynordmann.github.io/workshop-dataviz/installing-r.htmlAlternatively, can create free profile RStudio Cloud: https://rstudio.cloud/","code":""},{"path":"introduction.html","id":"what-are-r-and-rstudio","chapter":"1 Introduction","heading":"1.3.2 What are R and RStudio?","text":"R programming language write code RStudio Integrated Development Environment (IDE), makes working R easier. can use R without R Studio recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember actually using two pieces software, means time--time, may separate updates.","code":""},{"path":"introduction.html","id":"rstudio","chapter":"1 Introduction","heading":"1.3.2.1 RStudio","text":"default, RStudio arranged four window panes.\nFigure 1.1: RStudio IDE\nupper left pane source pane, view, write, edit code files view data spreadsheet format. first open RStudio, pane display open document load data.lower left pane console pane, can type commands view output messages. can write code console test , saved! need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages, Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout.","code":""},{"path":"introduction.html","id":"functions","chapter":"1 Introduction","heading":"1.3.3 Functions","text":"install R access range functions including options data wrangling statistical analysis. functions included default installation typically referred base R, can think like default apps come pre-loaded phone.type function console pane, run soon hit enter. put function script R Markdown document, run run code.example, function sum() included base R. console, run code:","code":"\nsum(1,2,3)## [1] 6"},{"path":"introduction.html","id":"arguments","chapter":"1 Introduction","heading":"1.3.4 Arguments","text":"functions require specify arguments . Arguments basically telling function want run. example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen.details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector - sequence data - 26 lower-case Latin letters).","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"n\" \"w\" \"u\" \"z\" \"a\""},{"path":"introduction.html","id":"objects","chapter":"1 Introduction","heading":"1.3.5 Objects","text":"Objects things create code, can contain different things numbers, words, results analyses, dataframes. large part coding involve creating manipulating objects. assign content object using <-.Run following code console:Try create object called name enter name, object called age add age.","code":"\ntest <- \"potato\"\n\nsummed <- 1+2"},{"path":"introduction.html","id":"packages","chapter":"1 Introduction","heading":"1.3.6 Packages","text":"Packages add-ons allow access different functions included base R. done using install.packages(). like installing app phone: app remain installed remove . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.tutorial require use ggplot2 package, part tidyverse collection. install , copy paste code console (bottom left hand pane) press enter execute code.always install packages console never script - leaving code script can lead unintentionally install package update want. reason, avoid including install code script Markdown document.","code":"\n# type this in the console pane, never in a script or an R Markdown (.RMd) file!\ninstall.packages(\"tidyverse\")"},{"path":"setting-up.html","id":"setting-up","chapter":"2 Setting up","heading":"2 Setting up","text":"","code":""},{"path":"setting-up.html","id":"projects","chapter":"2 Setting up","heading":"2.1 Projects","text":"Projects useful way keeping code, data, output one place. create new project, open RStudio click File - New Project - New Directory - New Project. prompted give project name select location store project computer. done , click Create Project. Download simulated dataset ldt_data.csv OSF project created workshop move folder (ignore .Rmd file).files pane bottom right RStudio now display folder files contains - known working directory.","code":""},{"path":"setting-up.html","id":"rmd-files","chapter":"2 Setting up","heading":"2.2 .Rmd files","text":"open new .Rmd file: File - New File - R Markdown. Name SGSSS data viz workshop save . write code. Delete everything line 12.R Markdown, anything written grey code chunk assumed code, anything written white space (code chunks) regarded normal text. can insert new code chunk Ctrl + Alt + ( OS X: Cmd + Option + ).","code":""},{"path":"setting-up.html","id":"loading-packages","chapter":"2 Setting up","heading":"2.3 Loading packages","text":"load packages functions need, use library() function. Whilst need install packages , need load packages want use library() every time start R start new session. Make new code chunk, paste following code area backticks, run code:","code":"\nlibrary(tidyverse)"},{"path":"setting-up.html","id":"loading-data","chapter":"2 Setting up","heading":"2.4 Loading data","text":"load simulated data use function read_csv(). Make new code chunk, paste following code run code:code created object dat read data file ldt_data.csv. object appear environment pane top right. Note name data file must quotation marks file extension (.csv) must also included. receive error …exist current working directory highly likely made typo file name, included file extension .csv, data file want load stored project folder. get error find function means either loaded correct package, made typo function name.","code":"\ndat <- read_csv(file = \"ldt_data.csv\")"},{"path":"setting-up.html","id":"simulated-dataset","chapter":"2 Setting up","heading":"2.5 Simulated dataset","text":"purpose tutorial, use simulated data 2 x 2 mixed-design lexical decision task 100 participants must decide whether presented word real word non-word.","code":""},{"path":"setting-up.html","id":"formatting-the-data","chapter":"2 Setting up","heading":"2.5.1 Formatting the data","text":"Normally data wrangling cleaning time-consuming part data analysis R. Today, going give already formatted data can focus just data visualisation. Paste code new code chunk run format simulated dataset. want know steps , can refer full tutorial : https://psyteachr.github.io/introdataviz/index.htmlDepending type plot, either using dat dataframe, dat_clean dataframe - pay attention code task!","code":"\ndat_clean <- pivot_longer(data = dat, \n                         cols = rt_word:acc_nonword, \n                         names_sep = \"_\", \n                         names_to = c(\"dv_type\", \"condition\"),\n                         values_to = \"dv\") %>%\n  pivot_wider(names_from = \"dv_type\", \n              values_from = \"dv\") %>% \n  mutate(condition=as.factor(condition), language=as.factor(language))\n\ndat <- mutate(dat, language=as.factor(language))"},{"path":"setting-up.html","id":"data-overview","chapter":"2 Setting up","heading":"2.5.2 Data overview","text":"dataset dat_clean 200 rows (two rows participant: one responses nonword condition, one word condition). following columns:Participant information:\nid: Participant ID\nage: Age\nParticipant information:id: Participant IDage: AgeTwo -subject independent variables (IV):\nlanguage: Language group (1 = monolingual, 2 = bilingual)\ncondition: Word vs. non-word trials\nTwo -subject independent variables (IV):language: Language group (1 = monolingual, 2 = bilingual)condition: Word vs. non-word trialsParticipants responses dependent variables\nrt: Reaction time (ms)\nacc: Accuracy\nParticipants responses dependent variablesrt: Reaction time (ms)acc: Accuracy","code":""},{"path":"setting-up.html","id":"ggplot2-and-the-layer-system","chapter":"2 Setting up","heading":"2.6 ggplot2 and the layer system","text":"multiple approaches data visualisation R; workshop use ggplot2, uses layered grammar graphics, plots built series layers. may helpful think picture multiple elements sit .Importantly, layer independent independently customisable. example, size, colour, position component can adjusted. use layers makes easy build complex plots step--step, adapt extend plots existing code. layer separated +. try making simple histogram next!","code":""},{"path":"setting-up.html","id":"histogram","chapter":"2 Setting up","heading":"2.7 Histogram","text":"going plot distribution participant age histogram, add layers one--one demonstrate plot built step--step.Step 1: code tells R access ggplot function. first argument tells R plot dat dataframe. aes function, specify aesthetics plot, axes colours. need specify depends plot want make (learn later) - basic histogram need specify x-axis (y-axis automatically counts).Step 2: can see code produces empty plot - specified type plot want make. adding another layer: geom_histogram(). Geom expression type plot want create.Step 3: adding new layer can change axis names:Step 4: can also change theme plot:","code":"\nggplot(dat, aes(x = age))\nggplot(dat, aes(x = age)) +\n  geom_histogram()\nggplot(dat, aes(x = age)) +\n  geom_histogram()+\n  scale_x_continuous(\"Age\")\nggplot(dat, aes(x = age)) +\n  geom_histogram()+\n  scale_x_continuous(\"Age\")+\n  theme_bw()"},{"path":"setting-up.html","id":"density-plot","chapter":"2 Setting up","heading":"2.8 Density plot","text":"layer system makes easy create new types plots adapting existing recipes. example, rather creating histogram, can create smoothed density plot calling geom_density() rather geom_histogram(). rest code remains identical.\nFigure 2.1: Density plot age.\n","code":"\nggplot(dat, aes(x = age)) +\n  geom_density()+\n  scale_x_continuous(name = \"Age\")+\n  theme_bw()"},{"path":"bar-plots.html","id":"bar-plots","chapter":"3 Bar plots","heading":"3 Bar plots","text":"Now covered basic principles data visualisation using ggplot2, move different types data visualisation customisations plots. start bar charts - please note bar charts used count data, never used visualise means distributions conceal lot important information data!","code":""},{"path":"bar-plots.html","id":"bar-chart-of-counts","chapter":"3 Bar plots","heading":"3.1 Bar chart of counts","text":"first plot, make simple bar chart counts shows number participants language group.\nFigure 3.1: Bar chart counts.\nfirst line code sets base plot.data specifies data source use plotdata specifies data source use plotx specifies variable put x-axisx specifies variable put x-axisThe second line code adds geom, connected base code +. case, ask geom_bar(). geom associated default statistic. geom_bar(), default statistic count data passed . means specify y variable making bar plot counts; R automatically calculate counts groups variable. example, counts number data points category language variable.","code":"\nggplot(data = dat, aes(x = language)) +\n  geom_bar()"},{"path":"bar-plots.html","id":"customisation-1","chapter":"3 Bar plots","heading":"3.2 Customisation 1","text":"far made basic plots default visual appearance. many ways can control customise visual appearance figures R. visual appearance elements can customised within geom , within aesthetic mapping, connecting additional layers +. section, look simplest commonly-used customisations: changing colours, adding axis labels, adding themes.","code":""},{"path":"bar-plots.html","id":"changing-colours","chapter":"3 Bar plots","heading":"3.2.1 Changing colours","text":"basic bar chart, can control colours used display bars setting fill (internal colour) colour (outline colour) inside geom function. method changes bars.\nFigure 3.2: Bar chart counts.\nchange colours based variable, need specify fill argument inside aes first layer (instead geom layer. want outlines, need set colour argument aes first layer.\nFigure 3.3: Fill set variable\n","code":"\nggplot(data = dat, aes(x = language)) +\n  geom_bar(fill= \"white\",\n           colour= \"black\")\nggplot(data = dat, aes(x = language, fill=language)) +\n  geom_bar()"},{"path":"bar-plots.html","id":"accessible-colour-schemes","chapter":"3 Bar plots","heading":"3.2.2 Accessible colour schemes","text":"One drawbacks using ggplot2 visualisation default colour scheme colour-blind friendly, display well greyscale. can specify exact custom colours plots, one easy option use custom colour palette. take arguments default scale sister functions updating axis names labels, display plots contrasting colours can read colour-blind people also print well grey scale. viridis scale functions provide number different colour-blind greyscale-safe options.\nFigure 3.4: Use viridis palette accessibility.\nviridis palette options continuous (scale_fill_viridis_c) discrete (scale_fill_viridis_d) scales, different colour options -D. try use wrong version data working , receive error message. example, changing code scale_fill_viridis_c(option=\"D\") produce error message \"Error: Discrete value supplied continuous scale\" trying apply continuous colour scale discrete data.can also manually choose colours within viridis palette begin end arguments (range 0 1).\n(#fig:viridis 2)Setting viridis colours manually.\n","code":"\nggplot(dat, aes(language, fill=language)) +\n  geom_bar() +\n  scale_fill_viridis_d(option=\"D\")\nggplot(dat, aes(language, fill=language)) +\n  geom_bar() +\n  scale_fill_viridis_d(option=\"B\", begin=0.65, end=0.85)"},{"path":"bar-plots.html","id":"adding-a-theme","chapter":"3 Bar plots","heading":"3.2.3 Adding a theme","text":"ggplot2 number built-visual themes can apply extra layer. code updates x-axis y-axis labels histogram, also applies theme_minimal(). part theme can independently customised, may necessary, example, journal guidelines fonts publication. instructions online appendices.\nFigure 3.5: Bar chart custom theme.\n","code":"\nggplot(dat, aes(language)) +\n  geom_bar(fill = \"wheat\", color = \"black\") +\n  scale_x_discrete(name = \"Number of participants\") +\n  theme_minimal()"},{"path":"scatterplots.html","id":"scatterplots","chapter":"4 Scatterplots","heading":"4 Scatterplots","text":"Correlation data typically visualised scatterplot. Scatterplots created calling geom_point() require x y variable specified mapping.\nFigure 4.1: Scatterplot reaction time versus accuracy.\nline best fit can added additional layer calls function geom_smooth(). default draw LOESS (locally estimated scatterplot smoothing) curved regression line. However, linear line best fit can specified using method = \"lm\". default, geom_smooth() also draw confidence envelope around regression line; can removed adding se = FALSE geom_smooth(). common error try use geom_line() draw line best fit, whilst sensible guess, work.\nFigure 4.2: Line best fit reaction time versus accuracy.\n","code":"\nggplot(dat_clean, aes(x = rt, y = acc)) +\n  geom_point()\nggplot(dat_clean, aes(x = rt, y = acc)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")"},{"path":"scatterplots.html","id":"grouped-scatterplots","chapter":"4 Scatterplots","heading":"4.1 Grouped scatterplots","text":"R always follow instructions, even instructions might best option data. analyst comes make decisions best visualise data highlight patterns. might notice scatterplot single regression line negative, roughly two groups data look positive. example something called Simpson's paradox (see, Kievit et al., 2013) associations whole population may reserved different sub-groups.highlight different groups potentially uncover patterns, scatterplots can easily adjusted display grouped data. geom_point(), grouping variable mapped colour rather fill relevant scale_* function added:\nFigure 4.3: Grouped scatterplot reaction time versus accuracy condition.\n","code":"\nggplot(dat_clean, aes(x = rt, y = acc, colour = condition)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_colour_discrete(name = \"Condition\",\n                        labels = c(\"Non-Word\", \"Word\"))"},{"path":"scatterplots.html","id":"facets","chapter":"4 Scatterplots","heading":"4.2 Facets","text":"far produced single plots display desired variables. However, situations may useful create separate plots level variable. can also help accessibility used instead addition group colours.Rather using colour = condition produce different colours level condition, variable instead passed facet_wrap().Rather using colour = condition produce different colours level condition, variable instead passed facet_wrap().Set number rows nrow number columns ncol. specify , facet_wrap() make best guess.Set number rows nrow number columns ncol. specify , facet_wrap() make best guess.\nFigure 4.4: Faceted scatterplot\n","code":"\nggplot(dat_clean, aes(x = rt, y = acc)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~condition, nrow = 2)"},{"path":"scatterplots.html","id":"customisation-2","chapter":"4 Scatterplots","heading":"4.3 Customisation 2","text":"","code":""},{"path":"scatterplots.html","id":"editing-axis-names-and-labels","chapter":"4 Scatterplots","heading":"4.3.1 Editing axis names and labels","text":"edit axis names labels can connect scale_* functions plot + add layers. functions part ggplot2 one use depends aesthetic wish edit (e.g., x-axis, y-axis, fill, colour) well type data represents (discrete, continuous).bar chart counts, x-axis mapped discrete (categorical) variable whilst y-axis continuous. relevant scale function various elements can customised. axis function added layer basic plot.\nFigure 4.5: Scatterplot custom axis labels.\nname controls overall name axis (note use quotation marks).name controls overall name axis (note use quotation marks).breaks controls tick marks axis. , multiple values, enclosed within c(). numeric text, need quotation marks. c() function see many different contexts used combine multiple values. case, breaks want apply combined within c().breaks controls tick marks axis. , multiple values, enclosed within c(). numeric text, need quotation marks. c() function see many different contexts used combine multiple values. case, breaks want apply combined within c().limits controls start end axis. ggplot2 try guess good range data, sometimes also need set limits() axis breaks work. delete limits argument , see despite setting breaks 0, axis tick marks start 80 smallest value approximately 75.limits controls start end axis. ggplot2 try guess good range data, sometimes also need set limits() axis breaks work. delete limits argument , see despite setting breaks 0, axis tick marks start 80 smallest value approximately 75.","code":"\nggplot(dat_clean, aes(x = rt, y = acc)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")+\n  scale_x_continuous(name = \"Reaction time (ms)\") +\n  scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100), limits= c(0, 100))"},{"path":"scatterplots.html","id":"specifying-axis-breaks-with-seq","chapter":"4 Scatterplots","heading":"4.3.2 Specifying axis breaks with seq()","text":"Typing values want display axis sometimes inefficient. Instead, can use function seq() specify first last value increments breaks display two values.","code":"\nggplot(dat_clean, aes(x = rt, y = acc)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")+\n  scale_x_continuous(name = \"Reaction time (ms)\") +\n  scale_y_continuous(name = \"Accuracy\", breaks = seq(70, 100, by=5), limits= c(70,100))"},{"path":"violin-boxplots.html","id":"violin-boxplots","chapter":"5 Violin-boxplots","heading":"5 Violin-boxplots","text":"power layered system making figures highlighted ability combine different types plots. example, rather using bar chart error bars, can easily create single plot includes density distribution, confidence intervals, means standard errors. code, first draw violin plot, layer boxplot, point mean (note geom = \"point\") standard error bars (geom = \"errorbar\").fatten = NULL boxplot geom removes median line, can make easier see mean error bars. Including argument result message Removed 1 rows containing missing values (geom_segment) cause concern. Removing argument reinstate median line.\nFigure 5.1: Violin-boxplot mean dot standard error bars.\nimportant note order layers matters worth experimenting order see order matters. example, call geom_boxplot() followed geom_violin(), get following mess:\nFigure 5.2: Plot geoms wrong order.\n","code":"\nggplot(dat_clean, aes(x = condition, y= rt)) +\n  geom_violin() +\n  # remove the median line with fatten = NULL\n  geom_boxplot(width = .2, \n               fatten = NULL) +\n  stat_summary(fun = \"mean\", geom = \"point\") +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1)\nggplot(dat_clean, aes(x = condition, y= rt)) +\n  geom_boxplot() +  \n  geom_violin() +\n  stat_summary(fun = \"mean\",  geom = \"point\") +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1)"},{"path":"violin-boxplots.html","id":"grouped-violin-boxplots","chapter":"5 Violin-boxplots","heading":"5.0.1 Grouped violin-boxplots","text":"can map multiple variables violin-boxplot fill argument violin-boxplot. However, simply adding fill mapping causes different components plot become misaligned different default positions:\nFigure 5.3: Grouped violin-boxplots without repositioning.\nrectify , need adjust argument position misaligned layers. position_dodge() instructs R move (dodge) position plot component specified value; finding value looks best can sometimes take trial error.\nFigure 5.4: Grouped violin-boxplots repositioning.\n","code":"\nggplot(dat_clean, aes(x = condition, y= rt, fill = language)) +\n  geom_violin() +\n  geom_boxplot(width = .2, \n               fatten = NULL) +\n  stat_summary(fun = \"mean\",  geom = \"point\") +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1)\n# set the offset position of the geoms\npos <- position_dodge(0.9)\n\nggplot(dat_clean, aes(x = condition, y= rt, fill = language)) +\n  geom_violin(position = pos) +\n  geom_boxplot(width = .2, \n               fatten = NULL, \n               position = pos) +\n  stat_summary(fun = \"mean\", \n               geom = \"point\", \n               position = pos) +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1,\n               position = pos)+\n  scale_fill_viridis_d(option=\"B\", begin=0.5, end=0.8)"},{"path":"violin-boxplots.html","id":"storing-plots","chapter":"5 Violin-boxplots","heading":"5.1 Storing plots","text":"Just like datasets, plots can saved objects. code saves histograms produced reaction time accuracy objects named p1 p2. plots can viewed calling object name console.Importantly, layers can added saved objects. example, code adds theme plot saved p1 saves new object p3. important many examples ggplot2 code find online help forums use p + format build plots fail explain means, can confusing beginners.","code":"\np1 <- ggplot(dat_clean, aes(x = rt)) +\n  geom_histogram(binwidth = 10, color = \"black\")\n\np2 <- ggplot(dat_clean, aes(x = acc)) +\n  geom_histogram(binwidth = 1, color = \"black\") \np3 <- p1 + theme_minimal()"},{"path":"violin-boxplots.html","id":"saving-plots-as-images","chapter":"5 Violin-boxplots","heading":"5.2 Saving plots as images","text":"addition saving plots objects use R, function ggsave() can used save plots images hard drive. plot saved current working directory, unless specify alternative location folder within current working directory.required argument ggsave file name image file create, complete file extension (can \"eps\", \"ps\", \"tex\", \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\"). default, ggsave() save last plot displayed. However, can also specify specific plot object one saved.width, height resolution image can manually adjusted. Fonts scale sizes, may look different preview images see Viewer tab. help documentation useful (type ?ggsave console access help).","code":"\nggsave(filename = \"my_plot.png\") # save last displayed plot\n\nggsave(filename = \"my_plot.png\", plot = p3) # save plot p3"},{"path":"line-plots.html","id":"line-plots","chapter":"6 Line plots","heading":"6 Line plots","text":"final data visualisation chapter, show one option visualisation time series data: line plots. many ways visualising data like , heatmaps: https://r-graph-gallery.com/283--hourly-heatmap.html, stacked area charts: https://r-graph-gallery.com/136-stacked-area-chart, able create ggplot2 well.chapter, instead simulated dataset, use real dataset covid-19 vaccinations Denmark World Data (https://ourworldindata.org/). cleaned data purposes workshop can downloaded workshop OSF page.Make sure download data file paste project folder trying run code .","code":""},{"path":"line-plots.html","id":"read-in-the-data","chapter":"6 Line plots","heading":"6.1 Read in the data","text":"code create new object vaccinations read datafile vaccinations_by_age_group.csv:data set, vaccination data Denmark different age groups.date column shows timestamps. x axis plot.date column shows timestamps. x axis plot.people_fully_vaccinated_per_hundred shows data many people per hundred vaccinated given date (data cumulative).people_fully_vaccinated_per_hundred shows data many people per hundred vaccinated given date (data cumulative).-age_group shows age data split age (15-17, 18-24, 25-49, 50-59, 60-69, 70-79, 80+).","code":"\nvaccinations <- read_csv(\"vaccinations_by_age_group.csv\")"},{"path":"line-plots.html","id":"line-plot","chapter":"6 Line plots","heading":"6.2 Line plot","text":"start making simple line plot. line plot, need define x y axes aes() function.","code":"\nggplot(vaccinations, aes(x = date, y = people_fully_vaccinated_per_hundred))+\n  geom_line()"},{"path":"line-plots.html","id":"grouping-the-plot","chapter":"6 Line plots","heading":"6.2.1 Grouping the plot","text":"Unless enjoy recreating album covers Arctic Monkeys, can see plot make sense. multiple data points dates (age groups entry). make plot makes sense, need group plot age group. means ggplot function split data based variable specify group argument.Alternatively, facet plot, able see trends one plot, usually important time series data.","code":"\nggplot(vaccinations, aes(x = date, y = people_fully_vaccinated_per_hundred, group=age_group))+\n  geom_line()\nggplot(vaccinations, aes(date, people_fully_vaccinated_per_hundred))+\n  geom_line()+\n  facet_wrap(~age_group)"},{"path":"line-plots.html","id":"customising-the-plot","chapter":"6 Line plots","heading":"6.2.2 Customising the plot","text":"Finally, add colour plot distinguish age groups, add another layer geom_point() mark different time points clearly, change theme plot make colour-blind friendly.","code":"\nggplot(vaccinations, aes(x=date, y=people_fully_vaccinated_per_hundred, colour=age_group, group=age_group))+\ngeom_point()+\ngeom_line()+\ntheme_minimal()+\nscale_colour_viridis_d(option=\"D\")"},{"path":"line-plots.html","id":"dealing-with-a-date-axis","chapter":"6 Line plots","heading":"6.2.3 Dealing with a date axis","text":"One thing note x-axis dates instead numbers (look vaccinations dataframe, datatype unknown. Luckily, customisation options ggplot! can use scale_x_date function layer modify work date formats:want information customising dates ggplot, blog post useful: https://www.r-bloggers.com/2018/06/customizing-time--date-scales--ggplot2/","code":"\nggplot(vaccinations, aes(x=date, y=people_fully_vaccinated_per_hundred, colour=age_group, group=age_group))+ \n  geom_point()+\n  geom_line()+\n  theme_minimal()+\n  scale_colour_viridis_d(option=\"D\")+ \n  scale_x_date(date_labels = \"%b %Y\", # %b = abbreviated month name; %Y = Year with century\n               date_breaks = \"3 months\")"},{"path":"line-plots.html","id":"end-of-first-half","chapter":"6 Line plots","heading":"6.3 End of first half!","text":"Well done completing first half workshop! Now basic understanding ggplot2 works, different plot types, customisation options available . resources appendix like expand plotting skills.second half workshop, small data visualisation group project, can find chapter 7!","code":""},{"path":"group-task.html","id":"group-task","chapter":"7 Group task","heading":"7 Group task","text":"Hopefully, point learnt creating different plots R follow instructions. next step learning, time apply new found R skills novel data.First, arrange groups. full room 20 people, recommend five groups four members. spread expertise leaving people nothing . end different number, can tweak group sizes workshop.collated four data sets - academic articles others statistics agencies - choose final group task. created OSF project host data added code book know variable represents. data sets come range sources, hopefully group can find one find interesting. need use every single variable, key part task deciding message trying communicate type plot best suited type data use.can find direct link data set :Farias et al. (2019) – Athetist’s Christian’s motivations hike pilgrimage trailFarias et al. (2019) – Athetist’s Christian’s motivations hike pilgrimage trailDawtry et al. (2015) – Perceptions income inequalityDawtry et al. (2015) – Perceptions income inequalityRoad accidentsRoad accidentsVaccination rate countryVaccination rate countryOnce decide data set, like create two versions plot:One “good” plot transparently communicate findingsOne “good” plot transparently communicate findingsOne “bad” plot misleadingly poorly communicate findingsOne “bad” plot misleadingly poorly communicate findingsThe idea demonstrate learnt plotting using ggplot principles visual data communication start workshop. key part knowing create effective data visualisation understanding also presented ineffectively. example, truncating y-axis using counter intuitive design elements, compared transparently displaying underlying distribution continuous data selecting colour blind friendly colour palettes.finished, save plots one group upload good bad examples padlet board.Everyone one good vote one bad vote, heart favourite category. good plot bad plot votes get super special prize group! plots tie votes, Wil James vote tiebreakers.","code":""},{"path":"additional-resources.html","id":"additional-resources","chapter":"8 Additional resources","heading":"8 Additional resources","text":"number incredible open-access online resources , using skills developed tutorial, allow start adapting figures plots make informative possible reader. Additionally, also many excellent resources expand topics covered briefly, particularly data wrangling, can help consolidate expand skill set.PsyTeachRThe psyTeachR team University Glasgow School Psychology Neuroscience successfully made transition teaching reproducible research using R across undergraduate postgraduate levels. curriculum now emphasizes essential ‘data science’ graduate skills overlooked traditional approaches teaching, including programming skills, data visualisation, data wrangling reproducible reports. Students learn probability inference data simulation well working real datasets. materials cover functions used tutorial depth Creative Commons licences allow use reuse without attribution.Applied Data SkillsLevel 1 Data SkillsLevel 2 AnalysesLevel 3 Statistical ModelsMsc Fundamentals Quantititive AnalysisMSc Data Skills Reproducible ResearchInstalling R RStudioInstalling R - PsyTeachRRunning R computer (walkthrough videos) - Danielle NavarroIntro R RStudioRStudio Essentials: Programming - Part 1 (Writing code RStudio)RStudio Essentials: Programming - Part 2 (Debugging code RStudio)R MarkdownIntroduction R MarkdownR Markdown: Definitive GuideData wranglingR Data ScienceText Mining RData visualisationR Graph GalleryFundamentals Data VizualisationData Vizualisation: Practical IntroductionLook Data Data Vizualization Social ScienceGraphs Cookbook RTop 50 ggplot2 VisualizationsR Graphics Cookbook Winston Changggplot extensionsplotly creating interactive graphsDrawing Beautiful Maps ProgrammaticallygganimateCommon R Mistakes Data Viz documents requests help common student mistakes creating data visualisations R","code":""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit, provide link license, indicate changes made. adapt material, must distribute contributions license original.","code":""}]
